<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.edu.care.dao.NotiDAO">	
	<insert id="sendNoti">
		INSERT INTO notification(to_user_code, from_user_code, noti_content_no, noti_type)
			VALUES(#{param1}, #{param2}, #{param3}, #{param4})
	</insert>
	
	<delete id="deleteNoti">
		DELETE FROM notification WHERE noti_content_no = #{param1} AND noti_type = #{param2}
	</delete>
	
	<select id="getNotis" resultType="noti">
		SELECT 
		 to_user_code, from_user_code, 
		 u.name AS from_user_name,
		 (select ac.code_name from all_code ac where u.class_code = ac.code) AS from_user_class,
		 noti_no, noti_content_no, 
		  CASE
		   WHEN n.noti_type = 0
		    THEN (SELECT a.title FROM approval a WHERE a.au_code = n.noti_content_no)
		   WHEN n.noti_type = 1
		    THEN (SELECT p.title FROM post p WHERE p.post_no = n.noti_content_no)
		   WHEN n.noti_type = 2
		    THEN (SELECT m.subject FROM mail m WHERE m.mail_no = n.noti_content_no)
		   WHEN n.noti_type IN (3,5)
		    THEN (SELECT s.title FROM schedule s WHERE s.sked_no = n.noti_content_no)
		   WHEN n.noti_type = 4
		    THEN (SELECT p.title FROM post p WHERE p.post_no = n.noti_content_no)
		  END AS  noti_content_title,
		   noti_date, noti_type, is_read
		  FROM notification n 
		   join `user` u on u.user_code = n.from_user_code
		    WHERE is_read LIKE 0 AND to_user_code = #{user_code}
		     ORDER By noti_date DESC;
   </select>
	
	<select id="getNotiCnt" resultType="int">
		SELECT to_user_code, COUNT(n.noti_no) AS notiCnt
		  FROM notification n
		   WHERE n.is_read LIKE 0 AND n.to_user_code = #{user_code}
	</select>
	
	<update id="readNotis">
		UPDATE notification
		 SET is_read = 1
		  WHERE is_read LIKE 0 AND noti_no = #{noti_no}
	</update>
	
</mapper>