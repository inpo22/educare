<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.edu.care.dao.CourseDAO">
	<select id="courseList" resultType="course">
		SELECT  c.course_name
				, c.course_start
				, c.course_end
				, c.course_no
				, u.name 
				, cr.course_space
		FROM course c
		JOIN course_rez cr on cr.course_no  = c.course_no
		JOIN user u on u.user_code  = c.user_code
		WHERE 1=1
			AND c.is_del = 0
			<if test="param4 != null and param4 != ''">
				 AND (
                <choose>
                    <when test="param3 == 'name'">
                        u.name LIKE CONCAT('%', #{param4}, '%')
                    </when>
                    <when test="param3 == 'course_name'">
                       	c.course_name LIKE CONCAT('%', #{param4}, '%')
                    </when>
                </choose>
            	)
			</if>
			<if test = "param5 == 'true'">
				<![CDATA[AND DATE(c.course_start) > DATE(now())]]>
			</if>
		 GROUP BY c.course_no
		 ORDER BY c.course_start DESC
		 LIMIT #{param1}, #{param2}
		
	</select>
	
	<select id="courseListPageCnt" resultType="Integer">
		SELECT 
				CEIL(COUNT(c.course_no)/#{param1}) 
		FROM course c
		JOIN user u on u.user_code  = c.user_code
		WHERE 1=1
			AND c.is_del = 0
			<if test="param3 != null and param3 != ''">
				 AND (
                <choose>
                    <when test="param2 == 'name'">
                        u.name LIKE CONCAT('%', #{param3}, '%')
                    </when>
                    <when test="param2 == 'course_name'">
                       	c.course_name LIKE CONCAT('%', #{param3}, '%')
                    </when>
                </choose>
            	)
			</if>
			<if test = "param4 == 'true'">
				<![CDATA[AND DATE(c.course_start) > DATE(now())]]>
			</if>
			ORDER BY c.course_start DESC
	</select>
	
	<select id="reservationTime" resultType="course">
		SELECT HOUR(start_time) as time
				, course_space 
		FROM course_rez 
		WHERE YEAR(start_time) = YEAR(#{param1}) 
		AND  MONTH(start_time) = MONTH(#{param1}) 
		AND  DAY(start_time) = DAY(#{param1}) 
		AND course_space = #{param2}
	</select>
	
	<insert id="courseWrite" parameterType="course" useGeneratedKeys="true" keyProperty="course_no">
		INSERT 
		INTO course ( 
			user_code
			, course_name
			, course_start
			, course_end
			, course_con
			, course_price )
		VALUES ( 
			#{user_code}
			, #{course_name}
			, #{min_start}
			, #{max_end}
			, #{course_con}
			, #{course_price} )
	</insert>
	
	<insert id="reservationCourseWrite" parameterType="course">
		INSERT 
		INTO course_rez ( 
			course_no
			, course_space
			, start_time
			, end_time )
		VALUES ( 
			#{course_no}
			, #{course_space}
			, #{start_time}
			, #{end_time} )
	</insert>
	
	<select id="courseDetail"  resultType="course">
		SELECT u.name
			, c.course_no
			, c.course_name
			, c.course_start
			, c.course_end
			, c.course_con
			, c.course_price
			, cr.course_space
			, cr.start_time
		FROM course c
		JOIN user u ON c.user_code = u.user_code 
		JOIN course_rez cr ON c.course_no = cr.course_no 
		WHERE c.course_no = #{param1}
	</select>
	
	<delete id="courseReservationDelete">
		DELETE 
		FROM course_rez 
		WHERE course_no = #{param1}
	</delete>
	
	<update id="courseHide">
		UPDATE 
			course 
		SET is_del=1 
		WHERE course_no = #{param1}
	</update>
	
	<select id="courseCheck" resultType="course">
		SELECT c.course_name
			, u.name
			, cr.start_time
			, cr.end_time
			, cr.course_space
			, cr.course_no
		FROM course_rez cr
		JOIN course c on cr.course_no  = c.course_no
		JOIN user u on c.user_code = u.user_code
	</select>
	
	<select id="checkUserCode" resultType="Integer">
		SELECT count(user_code)
		FROM user 
		WHERE user_code  = #{param1}
		AND classify_code in ('U01', 'U02')
		AND user_code != 'system'
		AND status = 0
	</select>
	
	<select id="checkUserCodeInfo" resultType="course">
		SELECT u.name, d.team_name
		FROM user u 
		JOIN department d
		ON u.team_code = d.team_code
		WHERE user_code  = #{param1}
	</select>
	
	<update id="courseUpdateAjax" parameterType="course">
		UPDATE 
			course 
		SET 
			course_name = #{course_name}
		  	, course_con = #{course_con}
		WHERE 
			course_no = #{course_no}
	</update>
	
	<select id="courseStuCheck" resultType="course">
		SELECT c.course_name
			 , u.name
			 , c.course_no
			 , cr.course_space
			 , cr.start_time
			 , cr.end_time 
		FROM course c 
		JOIN payment p ON c.course_no = p.course_no 
		JOIN user u ON u.user_code  = c.user_code 
		JOIN course_rez cr ON c.course_no = cr.course_no
		WHERE p.user_code = #{param1}
		AND p.pay_state = 1
	</select>
	
	<select id="courseStuCheckList" resultType="course">
		SELECT c.course_name
			 , c.course_start
			 , c.course_end 
		FROM course c 
		JOIN payment p ON c.course_no = p.course_no 
		JOIN user u ON u.user_code  = c.user_code 
		WHERE p.user_code = #{param1}
		AND p.pay_state = 1
		ORDER BY c.course_start ASC
	</select>
	
	<select id="getCourseSpaceList" resultType="course">
		SELECT cr.course_space 
		FROM course_rez cr
		GROUP BY course_space	
	</select>
</mapper>