<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.edu.care.dao.BoardDAO">
	
	 <select id="allList" resultType="board">
		SELECT  
			p.post_no
			, (SELECT u.name FROM user u WHERE u.user_code = p.user_code) AS user_name
			, (SELECT ac.code_name FROM all_code ac WHERE ac.code = (SELECT u2.class_code FROM user u2 WHERE u2.user_code = p.user_code)) AS class_name
			, p.title
			, p.bHit
			, p.reg_date
			, p.fixed_yn
			, (SELECT d.team_name FROM department d WHERE d.team_code = (SELECT u3.team_code FROM user u3 WHERE u3.user_code = p.user_code)) AS team_name
		FROM post p JOIN board b ON p.board_no = b.board_no
		WHERE p.is_del = 0 AND b.board_no = 1
		<if test="param4 != ''">
       		AND
	        <choose>
	            <when test="param3 == 'title'">
	                p.title LIKE CONCAT('%', #{param4}, '%')
	            </when>
	            <when test="param3 == 'writer'">
	                EXISTS (SELECT 1 FROM user u WHERE u.user_code = p.user_code AND u.name LIKE CONCAT('%', #{param4}, '%'))
	            </when>
	            <when test="param3 == 'contents'">
	                p.contents LIKE CONCAT('%', #{param4}, '%')
	            </when>
	        </choose>
    	</if>
		ORDER BY p.post_no DESC LIMIT #{param2} OFFSET #{param1}
	</select> 
	
	<select id="allListPageCnt" resultType="Integer">
		SELECT CEIL(COUNT(p.post_no)/#{param1}) FROM post p JOIN board b ON p.board_no = b.board_no
		WHERE p.is_del = 0 AND b.board_no = 1
		<if test="param3 != ''">
       		AND
	        <choose>
	            <when test="param2 == 'title'">
	                p.title LIKE CONCAT('%', #{param3}, '%')
	            </when>
	            <when test="param2 == 'writer'">
	                EXISTS (SELECT 1 FROM user u WHERE u.user_code = p.user_code AND u.name LIKE CONCAT('%', #{param3}, '%'))
	            </when>
	            <when test="param2 == 'contents'">
	                p.contents LIKE CONCAT('%', #{param3}, '%')
	            </when>
	        </choose>
    	</if>
	</select>

	<select id="topFixedList" resultType="board">
		SELECT  
			p.post_no
			, (SELECT u.name FROM user u WHERE u.user_code = p.user_code) AS user_name
			, (SELECT ac.code_name FROM all_code ac WHERE ac.code = (SELECT u2.class_code FROM user u2 WHERE u2.user_code = p.user_code)) AS class_name
			, p.title
			, p.bHit
			, p.reg_date
			, p.fixed_yn
			, (SELECT d.team_name FROM department d WHERE d.team_code = (SELECT u3.team_code FROM user u3 WHERE u3.user_code = p.user_code)) AS team_name 
		FROM post p JOIN board b ON p.board_no = b.board_no
		WHERE p.is_del = 0 AND b.board_no = 1
		AND p.fixed_yn = 1
	</select> 

	<select id="detail" resultType="board">
		SELECT 
			p.title
			, (SELECT u.name FROM user u WHERE u.user_code = p.user_code) AS user_name
			, (SELECT ac.code_name FROM all_code ac WHERE ac.code = (SELECT u2.class_code FROM user u2 WHERE u2.user_code = p.user_code)) AS class_name
			, (SELECT d.team_name FROM department d WHERE d.team_code = (SELECT u3.team_code FROM user u3 WHERE u3.user_code = p.user_code)) AS team_name 
			, p.reg_date
			, p.edit_date
			, p.fixed_yn
			, p.bHit
			, p.contents
		FROM post p JOIN board b ON p.board_no = b.board_no
		WHERE p.is_del = 0 AND p.post_no = #{param1}
	</select>

	<update id="upHit">
		update post set bHit = bHit+1 where post_no = #{param1}
	</update>

	<select id="attachFileList" resultType="board">
		SELECT
			af.file_no
			, af.ori_filename
			, af.new_filename
		FROM attach_file af
		WHERE af.post_no = #{param1} AND af.board_type = 'board'
	</select>
	
	<select id="getOriFileName" resultType="String">
		SELECT af.ori_filename FROM attach_file af WHERE af.new_filename = #{param1}
	</select>

	<update id="del">
		UPDATE post SET is_del = 1 WHERE post_no = #{param1}
	</update>

	<select id="isPerm" resultType="boolean">
		SELECT 
		    CASE 
		        WHEN user_code = #{param1} THEN true 
		        ELSE false 
		    END AS is_equal
		FROM 
		    post
		WHERE post_no = #{param2}
	</select>

	<insert id="allBoardWrite" useGeneratedKeys="true" keyColumn="post_no"
		keyProperty="post_no" parameterType="board" >
		INSERT INTO post(title, contents, fixed_yn, user_code, board_no)
		VALUES(#{title},#{contents},#{fixed_yn}, #{user_code}, 1)
	</insert>

	<insert id="fileSave" useGeneratedKeys="true" keyColumn="file_no"
		keyProperty="file_no" parameterType="board">
		INSERT INTO attach_file(user_code, ori_filename, new_filename, post_no, board_type)
			VALUES(#{user_code}, #{ori_filename}, '임시', #{post_no}, 'board')
	</insert>


	<select id="oldFileList" resultType="board">
		SELECT file_no, new_filename FROM attach_file WHERE post_no=#{param1}
	</select>


	<delete id="delAttachFile" parameterType="String">
		DELETE FROM attach_file WHERE file_no = #{param1}
	</delete>

	<update id="boardUpdate" parameterType="map">
		UPDATE post SET title = #{title}, contents = #{contents}, edit_date = NOW(), fixed_yn = #{fixed_yn}, edit_user_code = #{user_code} WHERE post_no = #{post_no}
	</update>

	<update id="newFileNameUpdate" parameterType="board">
		UPDATE attach_file SET new_filename = #{new_filename} WHERE file_no = #{file_no}
	</update>

	<!-- 부서공지 리스트 권한 조회-->
	<select id="teamBoardList" resultType="String">
		SELECT team_name FROM department 
<!-- 		WHERE upper_code IN ('T00','T02','T03')  -->
	</select>

	<!-- T02에 속한 부서도 권한 추가  -->
	<select id="isUpperCodeT02" resultType="String">
		SELECT upper_code FROM department WHERE team_code = #{team_code}
	</select>

	<!-- 부서공지 리스트 불러오기 -->
	<select id="teamList" resultType="board">
		SELECT  
			p.post_no
			, (SELECT u.name FROM user u WHERE u.user_code = p.user_code) AS user_name
			, (SELECT d.team_name FROM department d WHERE d.team_code = (SELECT u3.team_code FROM user u3 WHERE u3.user_code = p.user_code)) AS team_name 
			, (SELECT ac.code_name FROM all_code ac WHERE ac.code = (SELECT u2.class_code FROM user u2 WHERE u2.user_code = p.user_code)) AS class_name
			, p.title
			, p.bHit
			, p.reg_date
			, p.fixed_yn
		FROM post p 
		JOIN board b ON p.board_no = b.board_no
		JOIN user u ON p.user_code = u.user_code
		JOIN all_code ac2 ON u.team_code = ac2.code
		WHERE p.is_del = 0 AND b.board_no = 2 AND u.team_code = #{param5}
		<if test="param4 != ''">
			AND (
	        <choose>
	            <when test="param3 == 'title'">
	                p.title LIKE CONCAT('%', #{param4}, '%')
	            </when>
	            <when test="param3 == 'writer'">
	                EXISTS (SELECT 1 FROM user u2 WHERE u2.user_code = p.user_code AND u2.name LIKE CONCAT('%', #{param4}, '%'))
	            </when>
	            <when test="param3 == 'contents'">
	                p.contents LIKE CONCAT('%', #{param4}, '%')
	            </when>
	        </choose>
	        )
    	</if>
		ORDER BY p.post_no DESC 
		LIMIT #{param2} OFFSET #{param1}
	</select>

	<!-- 부서 페이지카운트 -->
	<select id="teamListPageCnt" resultType="Integer">
		SELECT CEIL(COUNT(p.post_no)/#{param1}) 
		FROM post p 
		JOIN board b ON p.board_no = b.board_no
		JOIN user u ON p.user_code = u.user_code
   		JOIN all_code ac ON u.team_code = ac.code
		WHERE p.is_del = 0 AND b.board_no = 2 AND u.team_code = #{param4}
		<if test="param3 != ''">
       		AND (
	        <choose>
	            <when test="param2 == 'title'">
	                p.title LIKE CONCAT('%', #{param3}, '%')
	            </when>
	            <when test="param2 == 'writer'">
	                EXISTS (SELECT 1 FROM user u WHERE u.user_code = p.user_code AND u.name LIKE CONCAT('%', #{param3}, '%'))
	            </when>
	            <when test="param2 == 'contents'">
	                p.contents LIKE CONCAT('%', #{param3}, '%')
	            </when>
	        </choose>
	        )
    	</if>
	</select>

	<!-- 부서페이지 상단고정여부체크 -->
	<select id="topFixedTeamList" resultType="board">
		SELECT  
			p.post_no
			, (SELECT u.name FROM user u WHERE u.user_code = p.user_code) AS user_name
			, (SELECT ac.code_name FROM all_code ac WHERE ac.code = (SELECT u2.class_code FROM user u2 WHERE u2.user_code = p.user_code)) AS class_name
			, (SELECT d.team_name FROM department d WHERE d.team_code = (SELECT u3.team_code FROM user u3 WHERE u3.user_code = p.user_code)) AS team_name
			, p.title
			, p.bHit
			, p.reg_date
			, p.fixed_yn
		FROM post p 
		JOIN board b ON p.board_no = b.board_no
		JOIN user u ON p.user_code = u.user_code
    	JOIN department d ON u.team_code = d.team_code
		WHERE p.is_del = 0 AND b.board_no = 2 AND p.fixed_yn = 1 AND u.team_code = #{param1}
	</select>

	<!-- 부서 글작성 -->
	<insert id="teamBoardWrite" useGeneratedKeys="true" keyColumn="post_no"
		keyProperty="post_no" parameterType="board" >
		INSERT INTO post(title, contents, fixed_yn, user_code, board_no)
		VALUES(#{title},#{contents},#{fixed_yn}, #{user_code}, 2)
	</insert>

	<!-- 학생 글리스트 -->
	<select id="stdList" resultType="board">
			SELECT  
				p.post_no
				, (SELECT u.name FROM user u WHERE u.user_code = p.user_code) AS user_name
				, (SELECT ac.code_name FROM all_code ac WHERE ac.code = (SELECT u2.class_code FROM user u2 WHERE u2.user_code = p.user_code)) AS class_name
				, p.title
				, p.bHit
				, p.reg_date
				, p.fixed_yn
			FROM post p JOIN board b ON p.board_no = b.board_no
			WHERE p.is_del = 0 AND b.board_no = 3
			<if test="param4 != ''">
	       		AND
		        <choose>
		            <when test="param3 == 'title'">
		                p.title LIKE CONCAT('%', #{param4}, '%')
		            </when>
		            <when test="param3 == 'contents'">
		                p.contents LIKE CONCAT('%', #{param4}, '%')
		            </when>
		        </choose>
	    	</if>
			ORDER BY p.post_no DESC LIMIT #{param2} OFFSET #{param1}
	</select> 
	
	<select id="stdListPageCnt" resultType="Integer">
		SELECT CEIL(COUNT(p.post_no)/#{param1}) FROM post p JOIN board b ON p.board_no = b.board_no
		WHERE p.is_del = 0 AND b.board_no = 3
		<if test="param3 != ''">
       		AND
	        <choose>
	            <when test="param2 == 'title'">
	                p.title LIKE CONCAT('%', #{param3}, '%')
	            </when>
	            <when test="param2 == 'contents'">
	                p.contents LIKE CONCAT('%', #{param3}, '%')
	            </when>
	        </choose>
    	</if>
	</select>

	<select id="topFixedStdList" resultType="board">
		SELECT  
			p.post_no
			, (SELECT u.name FROM user u WHERE u.user_code = p.user_code) AS user_name
			, (SELECT ac.code_name FROM all_code ac WHERE ac.code = (SELECT u2.class_code FROM user u2 WHERE u2.user_code = p.user_code)) AS class_name
			, p.title
			, p.bHit
			, p.reg_date
			, p.fixed_yn
		FROM post p JOIN board b ON p.board_no = b.board_no
		WHERE p.is_del = 0 AND b.board_no = 3
		AND p.fixed_yn = 1
	</select> 

	<insert id="stdBoardWrite" useGeneratedKeys="true" keyColumn="post_no"
		keyProperty="post_no" parameterType="board" >
		INSERT INTO post(title, contents, fixed_yn, user_code, board_no)
		VALUES(#{title},#{contents},#{fixed_yn}, #{user_code}, 3)
	</insert>
















</mapper>