<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.edu.care.dao.BoardDAO">
	
	 <select id="allList" resultType="board">
		SELECT  
			p.post_no
			, u.name AS user_name
			, (SELECT ac.code_name FROM all_code ac WHERE ac.code = u.class_code) AS class_name
			, p.title
			, p.bHit
			, p.reg_date
			, p.fixed_yn
			, (SELECT d.team_name FROM department d WHERE d.team_code = (SELECT u3.team_code FROM user u3 WHERE u3.user_code = p.user_code)) AS team_name
		FROM post p 
		JOIN board b ON p.board_no = b.board_no
		JOIN user u ON p.user_code = u.user_code 
		WHERE p.is_del = 0 AND b.board_no = 1
		<if test="param4 == null or param4 == ''">
			AND p.fixed_yn = 0	
		</if> 
		<if test="param4 != ''">
       		AND (
	        <choose>
	            <when test="param3 == 'title'">
	                p.title LIKE CONCAT('%', #{param4}, '%')
	            </when>
	            <when test="param3 == 'writer'">
	                EXISTS (SELECT 1 FROM user u WHERE u.user_code = p.user_code AND u.name LIKE CONCAT('%', #{param4}, '%'))
	            </when>
	            <when test="param3 == 'contents'">
	                p.contents LIKE CONCAT('%', #{param4}, '%')
	            </when>
	        </choose>
	        )
    	</if>
		ORDER BY p.post_no DESC 
		LIMIT #{param2} OFFSET #{param1}
	</select> 
	
	<select id="allListPageCnt" resultType="Integer">
		SELECT CEIL(COUNT(p.post_no)/#{param1}) 
		FROM post p 
		JOIN board b ON p.board_no = b.board_no
		JOIN user u ON p.user_code = u.user_code
		WHERE p.is_del = 0 AND b.board_no = 1
		<if test="param3 != ''">
       		AND (
	        <choose>
	            <when test="param2 == 'title'">
	                p.title LIKE CONCAT('%', #{param3}, '%')
	            </when>
	            <when test="param2 == 'writer'">
	                EXISTS (SELECT 1 FROM user u WHERE u.user_code = p.user_code AND u.name LIKE CONCAT('%', #{param3}, '%'))
	            </when>
	            <when test="param2 == 'contents'">
	                p.contents LIKE CONCAT('%', #{param3}, '%')
	            </when>
	        </choose>
	        )
    	</if>
	</select>

	<select id="topFixedList" resultType="board">
		SELECT  
			p.post_no
			, u.name AS user_name
			, (SELECT ac.code_name FROM all_code ac WHERE ac.code = u.class_code) AS class_name
			, p.title
			, p.bHit
			, p.reg_date
			, p.fixed_yn
			, (SELECT d.team_name FROM department d WHERE d.team_code = (SELECT u3.team_code FROM user u3 WHERE u3.user_code = p.user_code)) AS team_name 
		FROM post p 
		JOIN board b ON p.board_no = b.board_no 
		JOIN user u ON p.user_code = u.user_code
		WHERE p.is_del = 0 AND b.board_no = 1 AND p.fixed_yn = 1
	    ORDER BY p.post_no DESC 
		LIMIT 5
	</select> 

	<select id="detail" resultType="board">
		SELECT 
			p.title
			, (SELECT u.name FROM user u WHERE u.user_code = p.user_code) AS user_name
			, (SELECT ac.code_name FROM all_code ac WHERE ac.code = (SELECT u2.class_code FROM user u2 WHERE u2.user_code = p.user_code)) AS class_name
			, (SELECT d.team_name FROM department d WHERE d.team_code = (SELECT u3.team_code FROM user u3 WHERE u3.user_code = p.user_code)) AS team_name 
			, p.reg_date
			, p.edit_date
			, p.fixed_yn
			, p.bHit
			, p.contents
		FROM post p 
		JOIN board b ON p.board_no = b.board_no 
		WHERE p.is_del = 0 AND p.post_no = #{param1}
	</select>
	
	<select id="teamDetail" resultType="board">
		SELECT 
			p.title
			, p.post_team_code
			, (SELECT u.name FROM user u WHERE u.user_code = p.user_code) AS user_name
			, (SELECT ac.code_name FROM all_code ac WHERE ac.code = (SELECT u2.class_code FROM user u2 WHERE u2.user_code = p.user_code)) AS class_name
			, (SELECT d.team_name FROM department d WHERE d.team_code = (SELECT u3.team_code FROM user u3 WHERE u3.user_code = p.user_code)) AS team_name 
			, p.reg_date
			, p.edit_date
			, p.fixed_yn
			, p.bHit
			, p.contents
			, d.team_name AS post_team_name
		FROM post p 
		JOIN board b ON p.board_no = b.board_no 
		LEFT JOIN department d ON d.team_code = p.post_team_code
		WHERE p.is_del = 0 AND p.post_no = #{param1}
	</select>

	<select id="getAllUserCodes" resultType="String">
		SELECT user_code FROM user 
		WHERE classify_code IN ('U01', 'U02')
	</select>

	<update id="upHit">
		update post set bHit = bHit+1 where post_no = #{param1}
	</update>

	<select id="attachFileList" resultType="board">
		SELECT
			af.file_no
			, af.ori_filename
			, af.new_filename
		FROM attach_file af
		WHERE af.post_no = #{param1} AND af.board_type = 'board'
	</select>
	
	<select id="getOriFileName" resultType="String">
		SELECT af.ori_filename FROM attach_file af WHERE af.new_filename = #{param1}
	</select>

	<update id="del">
		UPDATE post SET is_del = 1 WHERE post_no = #{param1}
	</update>

	<select id="isPerm" resultType="boolean">
		SELECT 
		    CASE 
		        WHEN user_code = #{param1} THEN true 
		        ELSE false 
		    END AS is_equal
		FROM 
		    post
		WHERE post_no = #{param2}
	</select>

	<insert id="allBoardWrite" useGeneratedKeys="true" keyColumn="post_no"
		keyProperty="post_no" parameterType="board" >
		INSERT INTO post(title, contents, fixed_yn, user_code, board_no)
		VALUES(#{title},#{contents},0, #{user_code}, 1)
	</insert>

	<insert id="fileSave" useGeneratedKeys="true" keyColumn="file_no"
		keyProperty="file_no" parameterType="board">
		INSERT INTO attach_file(user_code, ori_filename, new_filename, post_no, board_type)
			VALUES(#{user_code}, #{ori_filename}, '임시', #{post_no}, 'board')
	</insert>


	<select id="oldFileList" resultType="board">
		SELECT file_no, new_filename FROM attach_file WHERE post_no=#{param1}
	</select>


	<delete id="delAttachFile" parameterType="String">
		DELETE FROM attach_file WHERE file_no = #{param1}
	</delete>

	<update id="boardUpdate" parameterType="map">
	    UPDATE post 
	    <trim prefix="SET" suffixOverrides=",">
	        title = #{title},
	        contents = #{contents}, 
	        edit_date = NOW(), 
		    fixed_yn = 0, 
	        edit_user_code = #{user_code},
	        <if test="teamCode != null">
	            post_team_code = #{teamCode},
	        </if>
	    </trim>
	    WHERE post_no = #{post_no}
	</update>

	<update id="newFileNameUpdate" parameterType="board">
		UPDATE attach_file SET new_filename = #{new_filename} WHERE file_no = #{file_no}
	</update>

	<!-- 부서공지 리스트 권한 조회-->
	<select id="teamBoardList" resultType="String">
	    SELECT team_name FROM department WHERE team_code = #{param1}
	</select>

	<select id="teamSelectList" resultType="board">
		SELECT team_code, team_name FROM department
	</select>
	
	<!-- 부서공지 리스트 불러오기 -->
	<select id="teamList" resultType="board">
    SELECT  
        p.post_no
        , u.name AS user_name
        , (SELECT d.team_name FROM department d WHERE d.team_code = (SELECT u3.team_code FROM user u3 WHERE u3.user_code = p.user_code)) AS team_name
        , (SELECT ac.code_name FROM all_code ac WHERE ac.code = u.class_code) AS class_name
        , p.title
        , d.team_name AS post_team_name
        , p.bHit
        , p.reg_date
        , p.fixed_yn
    FROM post p 
    JOIN board b ON p.board_no = b.board_no
    JOIN user u ON p.user_code = u.user_code
    LEFT JOIN department d ON d.team_code = p.post_team_code
    WHERE p.is_del = 0 AND b.board_no = 2 
    <if test="param4 == null or param4 == ''">
		AND p.fixed_yn = 0	
	</if>  
    <if test="param5 != ''">
        AND p.post_team_code = #{param5}
    </if>
    <if test="param4 != ''">
        AND (
            <choose>
                <when test="param3 == 'title'">
                    p.title LIKE CONCAT('%', #{param4}, '%')
                </when>
                <when test="param3 == 'writer'">
                    EXISTS (SELECT 1 FROM user u2 WHERE u2.user_code = p.user_code AND u2.name LIKE CONCAT('%', #{param4}, '%'))
                </when>
                <when test="param3 == 'contents'">
                    p.contents LIKE CONCAT('%', #{param4}, '%')
                </when>
            </choose>
        )
    </if>
	    ORDER BY p.post_no DESC 
	    LIMIT #{param2} OFFSET #{param1}
	</select>

	<!-- 부서 페이지카운트 -->
	<select id="teamListPageCnt" resultType="Integer">
	SELECT CEIL(COUNT(p.post_no) / #{param1})
	FROM post p
	JOIN board b ON p.board_no = b.board_no
	JOIN user u ON p.user_code = u.user_code
	WHERE p.is_del = 0 AND b.board_no = 2
	<if test="param4 != ''">
		AND p.post_team_code = #{param4}
	</if>
	<if test="param3 != ''">
		AND (
		<choose>
			<when test="param2 == 'title'">
				p.title LIKE CONCAT('%', #{param3}, '%')
			</when>
			<when test="param2 == 'writer'">
				EXISTS (SELECT 1 FROM user u WHERE u.user_code = p.user_code AND u.name
				LIKE CONCAT('%', #{param3}, '%'))
			</when>
			<when test="param2 == 'contents'">
				p.contents LIKE CONCAT('%', #{param3}, '%')
			</when>
		</choose>
		)
	</if>
</select>

	<!-- 부서페이지 상단고정여부체크 -->
	<select id="topFixedTeamList" resultType="board">
    SELECT  
	        p.post_no
	        ,  u.name AS user_name
	        , (SELECT d.team_name FROM department d WHERE d.team_code = (SELECT u3.team_code FROM user u3 WHERE u3.user_code = p.user_code)) AS team_name
	        , (SELECT ac.code_name FROM all_code ac WHERE ac.code = u.class_code) AS class_name
	        , p.title
	        , p.bHit
	        , d.team_name AS post_team_name
	        , p.reg_date
	        , p.fixed_yn
    FROM post p 
    JOIN board b ON p.board_no = b.board_no
    JOIN user u ON p.user_code = u.user_code
    LEFT JOIN department d ON d.team_code = p.post_team_code
    WHERE p.is_del = 0 AND b.board_no = 2 AND p.fixed_yn = 1 
    <if test="param1 != ''">
        AND p.post_team_code = #{param1}
    </if>
    ORDER BY p.post_no DESC 
	LIMIT 5
	</select>

	<!-- 부서 글작성 -->
	<insert id="teamBoardWrite" useGeneratedKeys="true" keyColumn="post_no"
		keyProperty="post_no" parameterType="board" >
		INSERT INTO post(title, contents, fixed_yn, user_code, board_no, post_team_code)
		VALUES(#{title},#{contents},0, #{user_code}, 2, #{teamCode})
	</insert>
	
	<select id="teamUserList" resultType="String">
		SELECT user_code FROM user WHERE team_code = #{param1}
	</select>

	<!-- 학생 글리스트 -->
	<select id="stdList" resultType="board">
		SELECT  
			p.post_no
			, u.name AS user_name
			, p.title
			, p.bHit
			, p.reg_date
			, p.fixed_yn
		FROM post p 
		JOIN board b ON p.board_no = b.board_no
		JOIN user u ON p.user_code = u.user_code 
		WHERE p.is_del = 0 AND b.board_no = 3
		<if test="param4 == null or param4 == ''">
			AND p.fixed_yn = 0	
		</if> 
		<if test="param4 != ''">
       		AND (
	        <choose>
	            <when test="param3 == 'title'">
	                p.title LIKE CONCAT('%', #{param4}, '%')
	            </when>
	            <when test="param3 == 'writer'">
	                EXISTS (SELECT 1 FROM user u WHERE u.user_code = p.user_code AND u.name LIKE CONCAT('%', #{param4}, '%'))
	            </when>
	            <when test="param3 == 'contents'">
	                p.contents LIKE CONCAT('%', #{param4}, '%')
	            </when>
	        </choose>
	        )
    	</if>
		ORDER BY p.post_no DESC 
		LIMIT #{param2} OFFSET #{param1}
	</select> 
	
	<select id="stdListPageCnt" resultType="Integer">
		SELECT CEIL(COUNT(p.post_no)/#{param1}) 
		FROM post p 
		JOIN board b ON p.board_no = b.board_no
		JOIN user u ON p.user_code = u.user_code
		WHERE p.is_del = 0 AND b.board_no = 3
		<if test="param3 != ''">
       		AND
	        <choose>
	            <when test="param2 == 'title'">
	                p.title LIKE CONCAT('%', #{param3}, '%')
	            </when>
	            <when test="param2 == 'contents'">
	                p.contents LIKE CONCAT('%', #{param3}, '%')
	            </when>
	        </choose>
    	</if>
	</select>

	<select id="topFixedStdList" resultType="board">
		SELECT  
			p.post_no
			, u.name AS user_name
			, p.title
			, p.bHit
			, p.reg_date
			, p.fixed_yn 
		FROM post p 
		JOIN board b ON p.board_no = b.board_no 
		JOIN user u ON p.user_code = u.user_code
		WHERE p.is_del = 0 AND b.board_no = 3 AND p.fixed_yn = 1 
	    ORDER BY p.post_no DESC LIMIT 5 
	</select> 

	<select id="dataDetail" resultType="board">
		SELECT 
			p.title
			, u.name AS user_name 
			, p.reg_date
			, p.edit_date
			, p.bHit
			, p.contents
		FROM post p 
		JOIN board b ON p.board_no = b.board_no 
		JOIN user u ON u.user_code = p.user_code
		WHERE p.is_del = 0 AND p.post_no = #{param1}
	</select>

<insert id="stdBoardWrite" useGeneratedKeys="true" keyColumn="post_no"
	keyProperty="post_no" parameterType="board" >
	INSERT INTO post(title, contents, fixed_yn, user_code, board_no)
	VALUES(#{title},#{contents},0, #{user_code}, 3)
</insert>

<!-- 자료실 -->
<select id="dataList" resultType="board">
		SELECT  
			p.post_no
			, u.name AS user_name
			, p.title
			, p.bHit
			, p.reg_date
		FROM post p 
		JOIN board b ON p.board_no = b.board_no
		JOIN user u ON p.user_code = u.user_code 
		WHERE p.is_del = 0 AND b.board_no = 4 
		<if test="param4 != ''">
       		AND (
	        <choose>
	            <when test="param3 == 'title'">
	                p.title LIKE CONCAT('%', #{param4}, '%')
	            </when>
	            <when test="param3 == 'contents'">
	                p.contents LIKE CONCAT('%', #{param4}, '%')
	            </when>
	        </choose>
	        )
    	</if>
		ORDER BY p.post_no DESC 
		LIMIT #{param2} OFFSET #{param1}
	</select> 

	<select id="dataListPageCnt" resultType="Integer">
		SELECT CEIL(COUNT(p.post_no)/#{param1}) 
		FROM post p 
		JOIN board b ON p.board_no = b.board_no
		JOIN user u ON p.user_code = u.user_code
		WHERE p.is_del = 0 AND b.board_no = 4
		<if test="param3 != ''">
       		AND
	        <choose>
	            <when test="param2 == 'title'">
	                p.title LIKE CONCAT('%', #{param3}, '%')
	            </when>
	            <when test="param2 == 'contents'">
	                p.contents LIKE CONCAT('%', #{param3}, '%')
	            </when>
	        </choose>
    	</if>
	</select>

	<insert id="dataBoardWrite" useGeneratedKeys="true" keyColumn="post_no"
		keyProperty="post_no" parameterType="board" >
		INSERT INTO post(title, contents, user_code, board_no)
		VALUES(#{title}, #{contents}, #{user_code}, 4)
	</insert>

	<update id="databoardUpdate" parameterType="map">
		    UPDATE post 
		    <trim prefix="SET" suffixOverrides=",">
		        title = #{title},
		        contents = #{contents}, 
		        edit_date = NOW(), 
		        edit_user_code = #{user_code}
		    </trim>
		    WHERE post_no = #{post_no}
	</update>
	
	<select id="topFixedListCheck" resultType="Integer">
		SELECT
			post_no
		FROM
			(SELECT
				p.post_no
				, IFNULL(GREATEST(p.reg_date, p.edit_date), p.reg_date) AS last_date
			FROM post p
			WHERE p.fixed_yn = 1 AND p.board_no = #{param1}
			<if test="param2 != ''">
				AND p.post_team_code = #{param2}
			</if>
			) AS subquery
		ORDER BY last_date ASC
	</select>
	
	<update id="topFixedOn">
		UPDATE post SET fixed_yn = 1 WHERE post_no = #{param1}
	</update>
	
	<update id="topFixedOff">
		UPDATE post SET fixed_yn = 0 WHERE post_no = #{param1}
	</update>
	
	<select id="checkPostType" resultType="board">
		SELECT p.board_no, IFNULL(p.post_team_code, '') AS post_team_code FROM post p WHERE p.post_no = #{param1}
	</select>

<!-- 	<select id="getOldFixedPostNo" resultType="Integer" parameterType="map"> -->
<!-- 		SELECT post_no FROM post WHERE fixed_yn = 1 AND board_no = #{board_no} ORDER BY edit_date, reg_date LIMIT 1 -->
<!-- 	</select> -->

<!-- 	<select id="getFixedCount" resultType="boolean" parameterType="String"> -->
<!-- 		SELECT CASE -->
<!-- 		    WHEN COUNT(post_no) >= 5 THEN true -->
<!-- 		    ELSE false -->
<!-- 		END as result -->
<!-- 		FROM post -->
<!-- 		WHERE fixed_yn = 1 AND board_no = #{param1} -->
<!-- 	</select> -->

<!-- 	<update id="updateOldFixedPost" parameterType="int"> -->
<!-- 		UPDATE post SET fixed_yn = 0 WHERE post_no = #{param1} -->
<!-- 	</update> -->






</mapper>